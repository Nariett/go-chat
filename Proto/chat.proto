syntax = "proto3";

package chat;

option go_package = "./Proto";

import "google/protobuf/timestamp.proto";

service ChatService{
    //ChatLogic
    rpc RegUser(UserData) returns (ServerResponse);
    rpc AuthUser(UserData) returns (ServerResponse);
    rpc JoinChat(UserName) returns (stream UserMessage);
    rpc LeaveChat(UserName) returns (ServerResponse);
    rpc SendMessage (UserMessage) returns (Empty);
    //Users
    rpc GetUsers(Empty) returns (Users);
    rpc GetActiveUsers(Empty) returns (Users);
    rpc GetUsersActivityDates(Empty) returns (UserActivityDates);
    rpc GetUserId (UserName) returns (UserId);
    //Messages
    rpc GetUnreadMessagesCounter (UserId) returns (UnreadMessages);
    rpc GetUnreadMessagesFromUser(UnreadChat) returns (Empty);
    rpc ReadOneMessage (UserMessage) returns (Empty);
    rpc ReadAllMessagesFrom (UnreadChat) returns (ServerResponse);
    rpc ReadAllMessages (UserId) returns (ServerResponse);
}
message UserId{
    int32 id = 1;
}
message UserName{
    string name = 1;
}
message UserData{
    string name = 1;
    string password = 2;
}
message Users{
    repeated string usernames = 1;
}
message UnreadChat{
    int32 recipient = 1;
    int32 sender = 2;
}
message UnreadMessages{
    map<string, int32>  messages = 1;
}
message UserActivityDates{
    map<string, google.protobuf.Timestamp> activity_date = 1;
}
message ServerResponse{
    bool success = 1;
    string message = 2;
}
message UserMessage{
    int32 sender = 1;
    int32 recipient = 2;
    string content = 3;
    google.protobuf.Timestamp sent_at = 4;
    optional google.protobuf.Timestamp read_at = 5;
}
message Empty{}